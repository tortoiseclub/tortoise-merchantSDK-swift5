//
// CancellationAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class CancellationAPI {
    /**
     Create a new cancellation request for a plan
     
     - parameter body: (body) cancellation object that needs to be added 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addCancellation(body: Cancellation, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        addCancellationWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Create a new cancellation request for a plan
     - POST /cancellations
     - API Key:
       - type: apiKey X-TORTOISE-KEY 
       - name: tortoise_merchant_apiKey
     - API Key:
       - type: apiKey X-TORTOISE-ID 
       - name: tortoise_merchant_appId
     
     - parameter body: (body) cancellation object that needs to be added 

     - returns: RequestBuilder<Void> 
     */
    open class func addCancellationWithRequestBuilder(body: Cancellation) -> RequestBuilder<Void> {
        let path = "/cancellations"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Edit a cancellation request for a plan
     
     - parameter cancellationId: (path) ID of the cancellation to edit 
     - parameter body: (body) Cancellation object that needs to be edited 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func editCancellation(cancellationId: String, body: Cancellation, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        editCancellationWithRequestBuilder(cancellationId: cancellationId, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Edit a cancellation request for a plan
     - PUT /cancellations/{cancellationId}
     - API Key:
       - type: apiKey X-TORTOISE-KEY 
       - name: tortoise_merchant_apiKey
     - API Key:
       - type: apiKey X-TORTOISE-ID 
       - name: tortoise_merchant_appId
     
     - parameter cancellationId: (path) ID of the cancellation to edit 
     - parameter body: (body) Cancellation object that needs to be edited 

     - returns: RequestBuilder<Void> 
     */
    open class func editCancellationWithRequestBuilder(cancellationId: String, body: Cancellation) -> RequestBuilder<Void> {
        var path = "/cancellations/{cancellationId}"
        let cancellationIdPreEscape = "\(cancellationId)"
        let cancellationIdPostEscape = cancellationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cancellationId}", with: cancellationIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Fetch all cancellations
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func fetchAllCancellations(completion: @escaping ((_ data: [Cancellation]?,_ error: Error?) -> Void)) {
        fetchAllCancellationsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Fetch all cancellations
     - GET /cancellations
     - API Key:
       - type: apiKey X-TORTOISE-KEY 
       - name: tortoise_merchant_apiKey
     - API Key:
       - type: apiKey X-TORTOISE-ID 
       - name: tortoise_merchant_appId
     - examples: [{contentType=application/json, example=[ {
  "requestRaisedOn" : "2000-01-23T04:56:07.000+00:00",
  "requestProcessedOn" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "plan" : {
    "product" : { },
    "planValue" : 0,
    "enrolledOn" : "2000-01-23T04:56:07.000+00:00",
    "totalPaidValue" : 1,
    "scheme" : { },
    "planMaturityDate" : "2000-01-23",
    "nextInstalmentDate" : "2000-01-23",
    "instalmentValue" : 6,
    "completedInstalments" : 5,
    "totalExpectedRedemptionValue" : 5,
    "currentCancellationValue" : 7,
    "lastInstalmentPaidOn" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "currentRedemptionValue" : 2,
    "customer" : { }
  },
  "status" : "raised"
}, {
  "requestRaisedOn" : "2000-01-23T04:56:07.000+00:00",
  "requestProcessedOn" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "plan" : {
    "product" : { },
    "planValue" : 0,
    "enrolledOn" : "2000-01-23T04:56:07.000+00:00",
    "totalPaidValue" : 1,
    "scheme" : { },
    "planMaturityDate" : "2000-01-23",
    "nextInstalmentDate" : "2000-01-23",
    "instalmentValue" : 6,
    "completedInstalments" : 5,
    "totalExpectedRedemptionValue" : 5,
    "currentCancellationValue" : 7,
    "lastInstalmentPaidOn" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "currentRedemptionValue" : 2,
    "customer" : { }
  },
  "status" : "raised"
} ]}]

     - returns: RequestBuilder<[Cancellation]> 
     */
    open class func fetchAllCancellationsWithRequestBuilder() -> RequestBuilder<[Cancellation]> {
        let path = "/cancellations"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[Cancellation]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get cancellation by ID
     
     - parameter cancellationId: (path) ID of the cancellation to fetch 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getCancellation(cancellationId: String, completion: @escaping ((_ data: Cancellation?,_ error: Error?) -> Void)) {
        getCancellationWithRequestBuilder(cancellationId: cancellationId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get cancellation by ID
     - GET /cancellations/{cancellationId}
     - API Key:
       - type: apiKey X-TORTOISE-KEY 
       - name: tortoise_merchant_apiKey
     - API Key:
       - type: apiKey X-TORTOISE-ID 
       - name: tortoise_merchant_appId
     - examples: [{contentType=application/json, example={
  "requestRaisedOn" : "2000-01-23T04:56:07.000+00:00",
  "requestProcessedOn" : "2000-01-23T04:56:07.000+00:00",
  "id" : "id",
  "plan" : {
    "product" : { },
    "planValue" : 0,
    "enrolledOn" : "2000-01-23T04:56:07.000+00:00",
    "totalPaidValue" : 1,
    "scheme" : { },
    "planMaturityDate" : "2000-01-23",
    "nextInstalmentDate" : "2000-01-23",
    "instalmentValue" : 6,
    "completedInstalments" : 5,
    "totalExpectedRedemptionValue" : 5,
    "currentCancellationValue" : 7,
    "lastInstalmentPaidOn" : "2000-01-23T04:56:07.000+00:00",
    "id" : "id",
    "currentRedemptionValue" : 2,
    "customer" : { }
  },
  "status" : "raised"
}}]
     
     - parameter cancellationId: (path) ID of the cancellation to fetch 

     - returns: RequestBuilder<Cancellation> 
     */
    open class func getCancellationWithRequestBuilder(cancellationId: String) -> RequestBuilder<Cancellation> {
        var path = "/cancellations/{cancellationId}"
        let cancellationIdPreEscape = "\(cancellationId)"
        let cancellationIdPostEscape = cancellationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{cancellationId}", with: cancellationIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Cancellation>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
